## Set these options to your liking and, rename the file to .build_env, and run
## `make` to build.

# This option points to the libqalculate build prefix (set it with
# `./autogen.sh --prefix` when building libqalculate).
LIBQALCULATE_PREFIX=libqalculate/

# Whether to statically link libqalculate.
LIBQALCULATE_STATIC_LINK=1

# Whether to preload datasets - used for planet() and atom() - before
# seccomping. This slightly degrades startup time, but allows the dataset
# functions to work with seccomp even if libqalculate was not compiled with the
# --enable-compiled-definitions flag. You can disable this if SECCOMP is set to
# 0 or if libqalculate was compiled with --enable-compiled-definitions (pass it
# to ./autogen.sh when building libqalculate).
LIBQALCULATE_PRELOAD_DATASETS=1

# [security] Whether to "defang" libqalculate by removing dangerous functions
# at runtime. Only disable this if libqalculate is compiled with
# --disable-insecure and --without-gnuplot-call (these flags are passed to
# ./autogen.sh when building libqalculate). If you don't know whether or not
# your libqalculate is compiled with these options, leave this flag enabled.
# Setting this to 0 may degrade security.
LIBQALCULATE_DEFANG=1

# [security] This controls setuid/setgid behaviour of qalculate-helper, and
# requires some setup. You need to create a user and a group, get their uid and
# gid (qalculate-helper assumes they're the same), chown the executable to the
# uid:gid, add suid and sgid mode, and set setgid and setpcap capabilities.
# For example:
# 1. Open /etc/passwd and add the following line (pick a different uid and gid
#    if 500 is already used, but make sure they're the same)
#    
#       qalc:x:500:500::/opt/qalculate-helper:/bin/false
#
# 2. Open /etc/group and add the following line
#
#       qalc:x:500:
#
# 3. (optional) Run `pwck` and `grpck` to correct shadow and gshadow databases
# 4. Run `chown qalc:qalc qalculate-helper`, where qalculate-helper is the
#    built qalculate-helper executable
# 5. Run `chmod 6755 qalculate-helper`
# 6. Run `setcap cap_setgid+ep cap_setpcap+ep qalculate-helper`
# Commenting this out degrades security.
SETUID='500'

# [security] This controls seccomp behaviour. Issues with seccomp manifest as
# "Bad system call" errors (exit code 159). In case this happens, refer to
# `dmesg` for the violated syscall and whitelist it in
# qalculate/helper/src/security_util.cpp. If you can, do contact me with
# replication instructions so I can fix it on the upstream.
# Setting this to 0 degrades security.
SECCOMP=1

# [security] This controls whether the clone(2) syscall is whitelisted. For
# reasons unknown to me, qalculate-helper will refuse to run in Docker unless
# this is enables, but seems to run just fine without it outside of Docker.
# This has no effect if SECCOMP is set to 0.
# Setting this to 1 degrades security.
SECCOMP_ALLOW_CLONE=0

# Whether to make the executable easy to debug. Only enable if you need it, as
# it sacrifices performance and security.
DEBUG=0
